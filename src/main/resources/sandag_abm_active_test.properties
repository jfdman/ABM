active.node.file = C:/Projects/SANDAG/Uptown_cleaned/SANDAG_Bike_NODEv5.dbf
#active.node.file = src/test/resources/SANDAG_Bike_NODE.dbf
#active.node.file = src/test/resources/SANDAG_Bike_NODE_SubArea.dbf
active.node.id = NodeLev_ID
active.node.fieldnames = mgra,taz,x,y,tap,signalized
active.node.columns = MGRA,TAZ,XCOORD,YCOORD,TAP,Signal
active.edge.file = C:/Projects/SANDAG/Uptown_cleaned/SANDAG_Bike_NETv5.dbf
#active.edge.file = src/test/resources/SANDAG_Bike_NET.dbf
#active.edge.file = src/test/resources/SANDAG_Bike_NET_SubArea.dbf
active.edge.anode = A
active.edge.bnode = B
active.edge.directional = false 
active.edge.fieldnames = functionalClass,distance,gain,bikeClass,lanes,cycleTrack,bikeBlvd
active.edge.columns.ab = Func_Class,Distance,AB_Gain,ABBikeClas,AB_Lanes,Bike2Sep,Bike3Blvd
active.edge.columns.ba = Func_Class,Distance,BA_Gain,BABikeClas,BA_Lanes,Bike2Sep,Bike3Blvd
active.edge.centroid.field = functionalClass
active.edge.centroid.value = 10
active.edge.autospermitted.field = functionalClass
active.edge.autospermitted.values = 1, 2, 3, 4, 5, 6, 7
# distance bins for control of path sampling
active.sample.distance.breaks =	0.5, 1.0, 2.0, 5.0, 8, 10, 99
# minimum path sizes of alternative lists for each distance bin
active.sample.pathsizes =		1.0, 1.5,   2,   6, 6,  6,  1
#active.sample.pathsizes =		1.0, 1.0,   1,   1, 1,  1,  1
# minimum count of samples for each distance bin
active.sample.count.min =     	  1,   20,   20,   20,  20,  15,  1
#active.sample.count.min =		1, 1,   1,   1, 1,  1,  1
# maximum count of samples for each distance bin
active.sample.count.max =     	  1,   100,   100,   100,  100,  100,  1
#active.sample.count.max =		1.0, 1.0,   1,   1, 1,  1,  1
# scale of random cost for each sampling iteration where random cost = cost + scale * unif(0,1) * distance
active.sample.random.scale.coef = 0.7
active.sample.random.scale.link = 0.9
active.sample.random.seeded = true
active.sample.maxcost = 998
active.maxdist.bike.taz = 20.0
active.maxdist.bike.mgra = 2.0
active.maxdist.walk.mgra = 3.0
active.maxdist.walk.tap = 1.0
active.output.bike = C:/Projects/SANDAG/output/bike/
active.output.walk = C:/Projects/SANDAG/output/walk/
active.coef.distcla0 =  0.858
active.coef.distcla1 =  0.248
active.coef.distcla2 =  0.544
active.coef.distcla3 =  0.773
active.coef.dartne2  =  1.050
active.coef.dwrongwy =  3.445
active.coef.dcyctrac =  0.424
active.coef.dbikblvd =  0.343
active.coef.gain     =  0.015
active.coef.turn     =  0.083
active.coef.signals  =  0.040
active.coef.unlfrma  =  0.360
active.coef.unlfrmi  =  0.150
active.coef.untoma   =  0.480
active.coef.untomi   =  0.100
active.coef.distance.walk = 20.0
active.coef.gain.walk = 0.067
active.trace.origins.taz = 500, 1000, 1500, 2000, 2500, 3000, 3500, 4000, 4500
active.trace.origins.mgra = 1000, 2000, 3000, 4000, 5000, 6000, 7000, 8000, 9000, 10000, 11000, 12000, 13000, 14000, 15000, 16000, 17000, 18000, 19000, 20000
active.trace.origins.tap = 1, 3, 5, 7, 8, 9, 15
active.trace.exclusive =  false
active.debug.origin = 200003500
active.debug.destination = 200003601

path.choice.uec.spreadsheet = src/test/resources/BikeTripPathChoice.xls
path.choice.uec.model.sheet = 1
path.choice.uec.data.sheet = 0
path.choice.max.path.count = 200
path.alts.file = src/test/resources/path_alts.csv
active.logsum.matrix.file.bike.taz = bikeTazLogsum.csv
active.logsum.matrix.file.bike.mgra = bikeMgraLogsum.csv
active.logsum.matrix.file.walk.mgra = walkMgraEquivMinutes.csv
active.logsum.matrix.file.walk.mgratap = walkMgraTapEquivMinutes.csv